#!/usr/bin/env bash
set -euo pipefail

show_help() {
  cat << EOF
sign-release 0.0.0

Easy automated release signing.

Usage: sign-release <git-tag> <pgp-key>

Examples:
    sign-release v0.1.2 Umbrel
    sign-release v0.1.3-beta pgp@getumbrel.com

GitHub: https://github.com/lukechilds/sign-release
EOF
}

check_dependencies () {
  for cmd in "$@"; do
    if ! command -v $cmd >/dev/null 2>&1; then
      log "This script requires \"${cmd}\" to be installed"
      exit 1
    fi
  done
}

main () {
  # Check deps before running any commands
  check_dependencies git gpg

  # Make sure params are set
  if [[ -z ${1+x} ]] || [[ -z ${2+x} ]]; then
    show_help
    exit 1
  fi

  tag=$1
  pgp_key=$2

  repo=$(basename $(git rev-parse --show-toplevel))
  archive_name="${repo}-${tag}"

  temp_dir="/tmp/sign-release/$(date +%s)-${RANDOM}-${archive_name}"
  mkdir -p "${temp_dir}"

  shasums_filename="SHASUMS256.asc"
  shasums_filepath="${temp_dir}/${shasums_filename}"

  key_data=$(gpg --list-keys "${pgp_key}" | sed -e '/^$/,$d')

  echo "Using the following key:"
  echo "${key_data}"

  echo
  echo "Building release archives for ${tag}..."
  echo "Building ${archive_name}.tar.gz..."
  git archive --format=tar.gz -o "${temp_dir}/${archive_name}.tar.gz" "${tag}"
  echo "Building ${archive_name}.zip..."
  git archive --format=zip -o "${temp_dir}/${archive_name}.zip" "${tag}"
  echo "Calculating shasums..."
  shasums="$(cd "${temp_dir}" && shasum --algorithm 256 *)"
  echo "Signing shasums..."
  export GPG_TTY=$(tty)
  signed_shasums=$(echo "${shasums}" | gpg --clearsign --local-user "${pgp_key}" > $shasums_filepath)
  echo "Done!"
  echo
  echo "Release assets at:"
  echo "${temp_dir}"
  echo
  cat "${shasums_filepath}"
}

main $@
